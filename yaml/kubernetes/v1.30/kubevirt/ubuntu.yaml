apiVersion: hostpathprovisioner.kubevirt.io/v1beta1
kind: HostPathProvisioner
metadata:
  name: vm-hostpath-provisioner
spec:
  imagePullPolicy: Always
  storagePools:
    - name: "host-volumes"
      path: "/data/vm/volumes"
  workload:
    nodeSelector:
      nvidia.com/gpu.workload.config: vm-passthrough

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: vm-host-path-csi
  namespace: default
provisioner: kubevirt.io.hostpath-provisioner
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
parameters:
  storagePool: host-volumes

---
apiVersion: v1
kind: Secret
metadata:
  name: ssh-key-ubuntu
type: Opaque
data:
  key1: c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFEVGdCM3BPelJuN09BdmJHemdJZjBtSng2SDlCeDVIeWtpRmdudGI4ajBQTzZuaWZLUkVBcmhld1pWRFBuN25lK2F2UWo0V05vaTUyNFgrdXpVRTZyU3diRGljVVgxOEdqbFo5dTlQTkMrTVZVWSszZC9JOUFIWEdBZEI2Q3dORStWbGt6OWZ2azNwcGNsZmdVUGI4Q0Zva0YxWnVlNGtKcElYV3VaLzAxTU1NbDZuMkZyWmhzbXJoTXdGRGpqVVdCdXRPRGdrQUhIS0x4UTh3TVlhZkhIeW93bkNQUklDNnZXZkFwdmRmcHFMRWNFRG1XaXBvUjk5UlFZdGNPcmFhWnBGSGMvbW9WNnVXdnRTTVh1MzJrODhiaFo4YVp5ZUpnYTBQdFVUTGNRVVlCb1JqWGgrQldMem1UZGhpMTg1U3o5WTVPcTdWY1FuMkgwcHhjY3R3M3ggcm9vdAo=
  key2: c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCQVFETjA1RVczR0M5WWs1Z2VpSThCVWt6dzVqaGZuRUROZFVFZEs3dWxrSW1kaG9FK2d6eVBvalRQWjZlckxJbVFBazY3d20wbjBCQnU4U2F0QjJOMDQwZmE0MjY3N0E0bUVaeS9SV2NDeUExeVBIQkRxTFhlUlhYNCtiT2tLYW5Qc3U5ZktGWkFUWkpYNjM1dGV2ZHRPS2FESTNZV0lReGdkcTlRbDVJaDJJbk0raUZHTjZLeXhHTzRaa0RIR0luQm1qMVhuSnBDUE1uOXhCMTVzSWUrejRmeXdyWk1DV2JmN3Byc2hGVHJwaVlCUkZpTk5JRS9UY0JEaThBQ0lKNEVQeFo3MkpDU1c0MTc0dHJIREY5MDJuN05FQ3dxdjFHMERMRTBESEd3VnE0L1NOOXM4SWYxdDF2Ym9kSzZWaVVxSkNZbHp0bDFoempjNVdFZHZVaDF5TUwgcm9vdA==

---
apiVersion: cdi.kubevirt.io/v1beta1
kind: DataVolume
metadata:
  name: system-disk-ubuntu
#  annotations:
#    cdi.kubevirt.io/storage.bind.immediate.requested: "true"
#    volume.kubernetes.io/selected-node: lwy-cn-chengdu-1-std-43-172-16-67-12
spec:
  storage:
    storageClassName: vm-host-path-csi
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 20Gi
  source:
    http:
      url: http://172.16.67.200:8000/ubuntu-24.04-server-cloudimg-amd64.img

---
apiVersion: cdi.kubevirt.io/v1beta1
kind: DataVolume
metadata:
  name: data-disk-ubuntu
#  annotations:
#    cdi.kubevirt.io/storage.bind.immediate.requested: "true"
#    volume.kubernetes.io/selected-node: lwy-cn-chengdu-1-std-43-172-16-67-12
spec:
  source:
    blank: {}
  storage:
    storageClassName: vm-host-path-csi
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi

---
apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: ubuntu
spec:
  runStrategy: Manual
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ubuntu
        app.kubernetes.io/instance: ubuntu
        app.kubernetes.io/version: v1
    spec:
      #nodeSelector:
      #  kubernetes.io/hostname: lwy-cn-chengdu-1-std-43-172-16-67-12
      domain:
        ioThreadsPolicy: auto
        devices:
          rng: {}
          networkInterfaceMultiQueue: true
          autoattachGraphicsDevice: false
          blockMultiQueue: true
          disks:
            - name: system
              tag: vda
              cache: none
              io: native
              bootOrder: 1
              dedicatedIOThread: false
              disk:
                bus: virtio
            - name: data
              tag: vdb
              cache: none
              io: native
              bootOrder: 2
              dedicatedIOThread: false
              disk:
                bus: virtio
            - name: cloud-init
              tag: vdc
              cache: none
              io: native
              bootOrder: 4
              dedicatedIOThread: false
              disk:
                bus: virtio
          gpus:
            - deviceName: nvidia.com/TU106_GEFORCE_RTX_2060_REV__A
              name: gpu0
        resources:
          overcommitGuestOverhead: false
          requests:
            cpu: 4
            memory: 8Gi
          limits:
            cpu: 4
            memory: 8Gi
      dnsPolicy: None
      dnsConfig:
        nameservers: [119.29.29.29, 10.16.0.10, 8.8.8.8]
      terminationGracePeriodSeconds: 180
      accessCredentials:
        - sshPublicKey:
            source:
              secret:
                secretName: ssh-key-ubuntu
            propagationMethod:
              qemuGuestAgent:
                users:
                  - root
      volumes:
        - name: system
          dataVolume:
            name: system-disk-ubuntu
        - name: data
          dataVolume:
            name: data-disk-ubuntu
        - name: cloud-init
          cloudInitNoCloud:
            networkData: |
              network:
                version: 2
                ethernets:
                  enp1s0:
                    dhcp4: true
                    dhcp6: true
                    match:
                      name: enp*
                    #nameservers:
                    #  addresses: [10.16.0.10, 61.139.2.69, 8.8.8.8]
            userData: |
              #cloud-config
              hostname: cloudos
              create_hostname_file: true
              timezone: Asia/Shanghai
              users:
                - name: root
                  lock_passwd: false
                  plain_text_passwd: "123456"
                  sudo: ALL=(ALL) NOPASSWD:ALL
              password: "123456"
              chpasswd:
                expire: false
              disable_root: false
              ssh_pwauth: true
              ssh_quiet_keygen: true
              no_ssh_fingerprints: true
              ssh:
                emit_keys_to_console: false
              apt:
                primary:
                  - arches: [default]
                    uri: http://mirrors.ustc.edu.cn/ubuntu/
              runcmd:
                - sed -i 's/^#PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config
                - sed -i 's/^PermitRootLogin.*/PermitRootLogin yes/g' /etc/ssh/sshd_config
                - sed -i 's/^#PubkeyAuthentication.*/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
                - sed -i 's/^PubkeyAuthentication.*/PubkeyAuthentication yes/g' /etc/ssh/sshd_config
                - sed -i 's/^#AuthorizedKeysFile.*/AuthorizedKeysFile .ssh\/authorized_keys/g' /etc/ssh/sshd_config
                - sed -i 's/^AuthorizedKeysFile.*/AuthorizedKeysFile .ssh\/authorized_keys/g' /etc/ssh/sshd_config
                - systemctl restart sshd || systemctl restart ssh
              disk_setup:
                /dev/vdb: {layout: true, overwrite: true, table_type: gpt}
              fs_setup:
                - {device: /dev/vdb1, filesystem: ext4, label: fs3}
              mounts:
                - [/dev/vdb1, /mnt/data, auto, "defaults,nofail", "0", "0"]
                #- [host-path, /data/share, virtiofs, "defaults,nofail", "0", "0"]
              growpart:
                devices: [/dev/vda1, /dev/vdb1]
                ignore_growroot_disabled: false
                mode: auto
              write_files:
                - path: /var/lib/cloud/scripts/per-boot/mnt-resize.sh
                  permissions: "0755"
                  content: |
                    #!/bin/bash
                    resize2fs -p -F /dev/vda1
                    resize2fs -p -F /dev/vdb1

---
apiVersion: v1
kind: Service
metadata:
  name: vm-ubuntu
  labels:
    kubernetes.io/service-export: "nginx"
    kubernetes.io/service-ssl: ""
spec:
  ports:
    - port: 38222
      name: ssh
      protocol: TCP
      targetPort: 22
    - port: 38888
      name: jupyter
      protocol: TCP
      targetPort: 8888
  selector:
    app.kubernetes.io/instance: ubuntu
  type: ClusterIP